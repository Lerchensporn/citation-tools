#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
import warnings
import re
from PyPDF2 import PdfFileReader
import urllib.request
import bibtexparser
import json
import tempfile
from citeproc import Citation, CitationItem

def bib_save(bibtex, ref_filename):
	base, tail = os.path.split(ref_filename)
	key = re.split("[ .,]+", tail)[0]
	filename = os.path.join(base, key + ".bib")
	database = bibtexparser.loads(bibtex)
	database.entries[0]["ID"] = key
	fp = open(filename, "w")
	writer = bibtexparser.bwriter.BibTexWriter()
	writer.indent = "	"
	fp.write(writer.write(database))
	fp.close()
	print("The database entry has been written to %s." % filename)

def doi2bib(doi):
	url = "http://dx.doi.org/" + doi
	headers = {"accept" : "application/x-bibtex"}
	req = urllib.request.Request(url, headers=headers)
	try:
		resp = urllib.request.urlopen(req)
	except urllib.error.HTTPError as err:
		if err.code == 404:
			print("Invalid DOI: %s" % doi, file=sys.stderr)
		else:
			raise
		return None
	return resp.read().decode(encoding="utf-8")

# pdftotext -f 1 -l 10 -raw "%s" -
def doi_from_file(filename):
	fp = open(filename, "rb")
	with warnings.catch_warnings():
		warnings.simplefilter("ignore")
		try:
			pdf = PdfFileReader(fp)
		except:
			return None
	doigex = re.compile('[\s\.\:]{0,2}(10\.\d{4}[\d\:\.\-\/a-zA-Z]+)[A-Z\s]')
	finds = []
	for i in range(min(10, pdf.getNumPages())):
		text = pdf.getPage(i).extractText().join("/\n")
		finds = doigex.findall(text)
		if len(finds) > 0:
			break
	fp.close()
	if len(finds) == 0:
		return None
	return finds[0]

def main():
	if len(sys.argv) < 2:
		print("Specify a list of DOI or file names.")
		return
	filename = None
	refitems = []
	for item in sys.argv[1:]:
		if item[0] != "-":
			refitems.append(item)
	for refitem in refitems:
		if os.path.exists(refitem):
			doi = doi_from_file(refitem)
			if doi is None:
				print("-> " + os.path.split(refitem)[1] + ":", file=sys.stderr)
				print("	The documents contains no DOI.", file=sys.stderr)
				continue
			filename = refitem
		else:
			doi = refitem
		bibtex = doi2bib(doi)
		if "--save" in sys.argv:
			bib_save(bibtex, filename)
		else:
			print(bibtex)

if __name__ == "__main__":
	main()
